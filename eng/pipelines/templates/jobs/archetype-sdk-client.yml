jobs:
  - job: Build
    variables:
      - template: ../variables/globals.yml
    pool:
      vmImage: windows-2019
    steps:
      - pwsh: |
          echo "##vso[build.addbuildtag]Scheduled"
        displayName: "Tag scheduled builds"
        condition: and(eq(variables['Build.SourceBranchName'],'master'),eq(variables['Build.Reason'],'Schedule'))
      - template: /eng/common/pipelines/templates/steps/daily-dev-build-variable.yml
      - pwsh: |
          $skipDevBuildNumber = "false"
          # For .NET builds the only case we want to not have dev build numbers on our packages is when it is manually queued and
          # the SetDevVersion property isn't set to true. All other cases should contain dev version numbers.
          if ('$(Build.Reason)' -eq 'Manual' -and '$(SetDevVersion)' -ne 'true') {
            $skipDevBuildNumber = "true"
          }
          $versioningProperties = "/p:OfficialBuildId=$(OfficialBuildId) /p:SkipDevBuildNumber=$skipDevBuildNumber";
          echo "##vso[task.setvariable variable=VersioningProperties]$versioningProperties"
        displayName: "Setup .NET specific versioning properties"
      - task: UsePythonVersion@0
        displayName: 'Use Python 3.6'
        inputs:
          versionSpec: '3.6'
      - template: /eng/common/pipelines/templates/steps/replace-relative-links.yml
        parameters:
          TargetFolder: '.'
          RootFolder: '.'
          BuildSHA: $(Build.SourceVersion)
          RepoId: 'Azure/azure-sdk-for-net'
      - script: >-
          dotnet pack eng/service.proj -warnaserror /p:ServiceDirectory=${{parameters.ServiceToBuild}} /p:PublicSign=false $(VersioningProperties) 
          /p:Configuration=$(BuildConfiguration) /p:CommitSHA=$(Build.SourceVersion) /p:ArtifactsPackagesDir=$(Build.ArtifactStagingDirectory)
        displayName: "Build and Package"
        env:
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
          DOTNET_CLI_TELEMETRY_OPTOUT: 1
          DOTNET_MULTILEVEL_LOOKUP: 0
      - template: ../steps/archetype-sdk-docs.yml
        parameters:
          ServiceDirectory: ${{parameters.ServiceDirectory}}
          Artifacts: ${{parameters.Artifacts}}
          DocGenerationDir: "$(Build.SourcesDirectory)/doc/ApiDocGeneration"
          LibType: 'client'
      - task: PublishPipelineArtifact@1
        condition: succeeded()
        inputs:
          artifactName: packages
          path: $(Build.ArtifactStagingDirectory)
